{
    "name": "qorus-vscode",
    "displayName": "Qorus Developer Tools",
    "description": "Qorus Integration Engine developer tools",
    "version": "0.0.8",
    "publisher": "qoretechnologies",
    "author": {
        "name": "Qore Technologies",
        "email": "vscode@qoretechnologies.com"
    },
    "engines": {
        "vscode": "^1.25.0"
    },
    "license": "SEE LICENSE IN LICENSE.txt",
    "homepage": "https://github.com/qoretechnologies/qorus-vscode",
    "repository": {
        "type": "git",
        "url": "https://github.com/qoretechnologies/qorus-vscode"
    },
    "bugs": {
        "url": "https://github.com/qoretechnologies/qorus-vscode/issues"
    },
    "categories": [
        "Other",
        "Snippets"
    ],
    "icon": "images/qorus_logo_256.png",
    "galleryBanner": {
        "color": "#333333",
        "theme": "dark"
    },
    "keywords": [
        "qore",
        "qorus",
        "ide",
        "integration",
        "engine"
    ],
    "activationEvents": [
        "*"
    ],
    "main": "out/extension",
    "contributes": {
        "languages": [
            {
                "id": "qmapper",
                "aliases": [
                    "Qorus Mapper"
                ],
                "extensions": [
                    ".qmapper"
                ],
                "configuration": "./syntaxes/qmapper.configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "qmapper",
                "scopeName": "source.qmapper",
                "path": "./syntaxes/qmapper.tmLanguage.json"
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "qorusInstances",
                    "title": "Qorus Instances",
                    "icon": "images/qorus_logo_28.png"
                }
            ]
        },
        "views": {
            "qorusInstances": [
                {
                    "id": "qorusInstancesExplorer",
                    "name": "Explorer"
                }
            ]
        },
        "commands": [
            {
                "command": "qorus.setActiveInstance",
                "title": "Qorus: Set as active Qorus instance"
            },
            {
                "command": "qorus.setInactiveInstanceStayLoggedIn",
                "title": "Qorus: Set as inactive Qorus instance, stay logged in"
            },
            {
                "command": "qorus.setInactiveInstance",
                "title": "Qorus: Set as inactive Qorus instance"
            },
            {
                "command": "qorus.logout",
                "title": "Qorus: Logout"
            },
            {
                "command": "qorus.loginAndSetActiveInstance",
                "title": "Qorus: Login, set as active Qorus instance"
            },
            {
                "command": "qorus.loginAndStayInactiveInstance",
                "title": "Qorus: Login, stay inactive Qorus instance"
            },
            {
                "command": "qorus.manageProjectConfig",
                "title": "Qorus: Manage project configuration"
            },
            {
                "command": "qorus.makeRelease",
                "title": "Qorus: Make release"
            },
            {
                "command": "qorus.deleteInterfaces",
                "title": "Qorus: Delete interfaces"
            },
            {
                "command": "qorus.deployCurrentFile",
                "title": "Qorus: Deploy current file"
            },
            {
                "command": "qorus.deployFile",
                "title": "Qorus: Deploy file"
            },
            {
                "command": "qorus.deployDir",
                "title": "Qorus: Deploy directory"
            },
            {
                "command": "qorus.openUrlInExternalBrowser",
                "title": "Qorus: Open URL in an external tool"
            },
            {
                "command": "qorus.testCurrentFile",
                "title": "Qorus: Execute current test file"
            },
            {
                "command": "qorus.testFile",
                "title": "Qorus: Execute test file"
            },
            {
                "command": "qorus.testDir",
                "title": "Qorus: Execute test files from directory"
            },
            {
                "command": "qorus.createService",
                "title": "Qorus: Create Qorus service"
            },
            {
                "command": "qorus.createJob",
                "title": "Qorus: Create Qorus job"
            },
            {
                "command": "qorus.createWorkflow",
                "title": "Qorus: Create Qorus workflow"
            },
            {
                "command": "qorus.createStep",
                "title": "Qorus: Create Qorus workflow step"
            },
            {
                "command": "qorus.createClass",
                "title": "Qorus: Create class"
            },
            {
                "command": "qorus.webview",
                "title": "Qorus: webview",
                "icon": "images/qorus_logo_28.png"
            }
        ],
        "keybindings": [
            {
                "command": "qorus.deployCurrentFile",
                "key": "ctrl+alt+o",
                "mac": "cmd+alt+r",
                "when": "editorTextFocus"
            },
            {
                "command": "qorus.testCurrentFile",
                "key": "ctrl+alt+t",
                "mac": "cmd+alt+t",
                "when": "editorTextFocus"
            }
        ],
        "menus": {
            "view/title": [
                {
                    "command": "qorus.webview",
                    "group": "navigation"
                }
            ],
            "editor/title": [
                {
                    "command": "qorus.webview",
                    "group": "navigation"
                }
            ],
            "explorer/context": [
                {
                    "when": "resourceScheme == file && !explorerResourceIsFolder",
                    "command": "qorus.deployFile",
                    "group": "2_workspace"
                },
                {
                    "when": "explorerResourceIsFolder",
                    "command": "qorus.deployDir",
                    "group": "2_workspace"
                },
                {
                    "when": "resourceScheme == file && !explorerResourceIsFolder",
                    "command": "qorus.testFile",
                    "group": "2_workspace"
                },
                {
                    "when": "explorerResourceIsFolder",
                    "command": "qorus.testDir",
                    "group": "2_workspace"
                },
                {
                    "when": "explorerResourceIsFolder",
                    "command": "qorus.createService",
                    "group": "2_workspace"
                },
                {
                    "when": "explorerResourceIsFolder",
                    "command": "qorus.createJob",
                    "group": "2_workspace"
                },
                {
                    "when": "explorerResourceIsFolder",
                    "command": "qorus.createWorkflow",
                    "group": "2_workspace"
                },
                {
                    "when": "explorerResourceIsFolder",
                    "command": "qorus.createStep",
                    "group": "2_workspace"
                },
                {
                    "when": "explorerResourceIsFolder",
                    "command": "qorus.createClass",
                    "group": "2_workspace"
                }
            ],
            "view/item/context": [
                {
                    "command": "qorus.setActiveInstance",
                    "when": "viewItem =~ /^qorus:inactive:(loggedIn|noAuth|unknown)$/"
                },
                {
                    "command": "qorus.setInactiveInstanceStayLoggedIn",
                    "when": "viewItem == qorus:active:loggedIn"
                },
                {
                    "command": "qorus.setInactiveInstance",
                    "when": "viewItem =~ /^qorus:active:(noAuth|unknown)$/"
                },
                {
                    "command": "qorus.logout",
                    "when": "viewItem =~ /^qorus:(active|inactive):loggedIn$/"
                },
                {
                    "command": "qorus.loginAndSetActiveInstance",
                    "when": "viewItem == qorus:inactive:loggedOut"
                },
                {
                    "command": "qorus.loginAndStayInactiveInstance",
                    "when": "viewItem == qorus:inactive:loggedOut"
                }
            ]
        },
        "configuration": {
            "type": "object",
            "title": "Qorus Extension Configuration",
            "properties": {
                "qorus.openUrlInExternalBrowser.mac": {
                    "type": "string",
                    "description": "a default tool to use with custom URLs on Mac/OSX. By default 'open' is the standard tool on OSX",
                    "scope": "window",
                    "default": "open"
                },
                "qorus.openUrlInExternalBrowser.windows": {
                    "type": "string",
                    "description": "a default tool to use with custom URLs on MS Windows. By default we are using 'start <empty comment> <url>' for windows. As it seems better solution than 'explorer' for now. But you can try 'explorer' if you are facing issues with 'start'",
                    "scope": "window",
                    "default": "start \"\""
                },
                "qorus.openUrlInExternalBrowser.linux": {
                    "type": "string",
                    "description": "a default tool to use with custom URLs on Linux. By default 'xdg-open' is the standard tool in Linux ecosystems",
                    "scope": "window",
                    "default": "xdg-open"
                },
                "qorusDeployment.allow-redef": {
                    "type": "boolean",
                    "description": "Allows dangerous workflow redefinitions",
                    "default": false
                },
                "qorusDeployment.force": {
                    "type": "boolean",
                    "description": "Force schema verification/downgrade with user schemas",
                    "default": false
                },
                "qorusDeployment.validate": {
                    "type": "boolean",
                    "description": "Validate all functions recursively",
                    "default": true
                },
                "qorusDeployment.reload": {
                    "type": "boolean",
                    "description": "Reload interfaces in the server",
                    "default": true
                },
                "qorusDeployment.verbosity-level": {
                    "type": "integer",
                    "description": "Sets verbosity level (greater value = more info)",
                    "default": 1
                },
                "qorusTest.continue-on-error": {
                    "type": "boolean",
                    "description": "if one of the tests fails, server will continue on execution of the rest",
                    "default": false
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run compile && npm run build",
        "compile": "tsc -p ./src",
        "watch": "tsc -watch -p ./src",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "test": "npm run compile && node ./node_modules/vscode/bin/test",
        "start": "NODE_ENV=development babel-node server.js",
        "build": "NODE_ENV=production webpack"
    },
    "devDependencies": {
        "@babel/cli": "^7.6.0",
        "@babel/core": "^7.6.0",
        "@babel/node": "^7.6.1",
        "@babel/plugin-proposal-class-properties": "^7.5.5",
        "@babel/plugin-proposal-decorators": "^7.6.0",
        "@babel/plugin-proposal-optional-chaining": "^7.6.0",
        "@babel/preset-env": "^7.6.0",
        "@babel/preset-react": "^7.0.0",
        "@babel/preset-typescript": "^7.6.0",
        "@blueprintjs/core": "^3.18.0",
        "@types/glob": "^5.0.35",
        "@types/mocha": "^2.2.43",
        "@types/node": "^7.10.7",
        "@types/prop-types": "^15.7.2",
        "@types/react": "^16.8.15",
        "@types/react-dom": "^16.8.4",
        "@types/request-promise": "^4.1.44",
        "@typescript-eslint/eslint-plugin": "^1.9.0",
        "babel-loader": "^8.0.6",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "babel-plugin-ttag": "^1.7.23",
        "compression-webpack-plugin": "^2.0.0",
        "connect-history-api-fallback": "^1.6.0",
        "copy-webpack-plugin": "^5.0.3",
        "css-loader": "^2.1.1",
        "eslint": "^5.16.0",
        "file-loader": "^3.0.1",
        "mini-css-extract-plugin": "^0.5.0",
        "node-sass": "^4.12.0",
        "optimize-css-assets-webpack-plugin": "^5.0.1",
        "react": "^16.9.0",
        "react-dom": "^16.9.0",
        "react-hot-loader": "^4.8.4",
        "react-redux": "^7.1.1",
        "redux": "^4.0.4",
        "sass-loader": "^7.3.1",
        "serve-static": "^1.14.1",
        "style-loader": "^0.23.1",
        "tslint": "^5.19.0",
        "typescript": "^3.4.5",
        "url-loader": "^1.1.2",
        "vsce": "^1.66.0",
        "vscode": "^1.1.36",
        "webpack": "^4.39.3",
        "webpack-cli": "^3.3.8",
        "webpack-dev-middleware": "^3.7.1",
        "webpack-dev-server": "^3.8.0",
        "webpack-hot-middleware": "^2.24.4",
        "webpack-merge": "^4.2.1"
    },
    "dependencies": {
        "@blueprintjs/datetime": "^3.9.2",
        "@blueprintjs/select": "^3.8.0",
        "@blueprintjs/table": "^3.7.1",
        "@types/styled-components": "^4.1.19",
        "archiver": "^3.1.1",
        "compressjs": "^1.0.3",
        "cron-validator": "^1.0.2",
        "cronstrue": "^1.81.0",
        "fs-copy-file": "^2.1.2",
        "gettext-parser": "^2.0.0",
        "js-yaml": "^3.13.1",
        "moment": "^2.24.0",
        "react-markdown": "^4.2.2",
        "react-scrollbar": "^0.5.6",
        "react-use": "^8.4.0",
        "recompose": "^0.30.0",
        "request": "^2.88.0",
        "request-promise": "^4.2.4",
        "resize-observer-polyfill": "^1.5.1",
        "shortid": "^2.2.15",
        "styled-components": "^4.2.0",
        "swagger-object-validator": "^1.1.7",
        "ttag": "^1.7.18",
        "yamljs": "^0.3.0"
    }
}
